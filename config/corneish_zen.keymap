/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        shm: shift_hr_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        shift_hrm: shift_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  |   |
            // | TAB  |  A  |  S  |  D* |  F* |  G  |   |  H  |  J*  |  K* |  L  |  ;  |  '   |
            // | CTRL |  Z* |  X* |  C  |  V  |  B  |   |  N  |  M   |  ,* |  .* |  /  | EQUAL|
            //                    |BKSP |LWR* |ENT* |   | SPC | RSE* |DEL* |

            bindings = <
&kp ESC   &kp Q       &kp W       &kp E        &kp R          &kp T             &kp Y      &kp U         &kp I           &kp O         &kp P            &kp BSPC
&kp TAB   &kp A       &kp S       &kp D        &shm LSHIFT F  &kp G             &kp H      &shm RSHFT J  &kp K           &kp L         &kp SEMI         &kp SQT
&kp LCTRL &hm LGUI Z  &hm LALT X  &hm RCTRL C  &kp V          &kp B             &kp N      &kp M         &kp RALT COMMA  &hm RGUI DOT  &hm RCTRL SLASH  &kp RSHFT
                                  &kp BSPC     &mo 1 MINUS    &shm LSHIFT RET   &kp SPACE  &mo 2 TAB     &hm RALT DEL
            >;
        };

        lower_layer {
            display-name = "NUMBER";

// Lower
//  ,-----------------------------------------------------.                    ,-----------------------------------------------------.
//  |    ▼   | CAPSLCK|  Home  |   ↑    |   Pg↑  |   {    |                    |    }   |   7    |   8    |   9    |   +    |  Del   |
//  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
//  |    ▼   | NUMLCK |   ←    │   ↓    │    →   |   [    |                    |    ]   |   4    |   5    |   6    |   -    |   =    |
//  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
//  |    ▼   |        |  End   |  SAVE  |   Pg↓  |   (    |                    |    )   |   1    |   2    |   3    |   *    |   ▼    |
//  `--------+--------+--------+--------+--------+--------+--------.  .--------+--------+--------+--------+--------+--------+--------'
//                                      |    ▼   |   ▼    |    ▼   |  |   -    | Adjust |   0    |
//                                      `--------------------------'  `--------------------------'
            bindings = <
&trans  &kp CAPS    &kp HOME  &kp UP    &kp PG_UP   &kp LBRC       &kp RBRC   &kp N7  &kp N8  &kp N9  &kp PLUS      &kp LC(BSPC)
&trans  &kp LNLCK   &kp LEFT  &kp DOWN  &kp RIGHT   &kp LBKT       &kp RBKT   &kp N4  &kp N5  &kp N6  &kp MINUS     &kp EQUAL
&trans  &kp LS(F10) &kp END   &kp LC(S) &kp PG_DOWN &kp LPAR       &kp RPAR   &kp N1  &kp N2  &kp N3  &kp ASTERISK  &trans
                              &trans    &trans      &trans         &kp UNDER  &mo 3   &kp N0
            >;
        };

        raise_layer {
            display-name = "SYMBOL";


// Raise
//  ,-----------------------------------------------------.                    ,-----------------------------------------------------.
//  |   ~    |    !   |   @    |   #    |   $    |   %    |                    |    ^   │    Ü   │    &   │    Ö   │    °   │   Del  |
//  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
//  |        │    Ä   │   SZ   │   è    │   é    │    ç   │                    │    /   │    £   │    €   │        │    µ   │        |
//  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
//  |        │        │        │        │        │        │                    │    |   │        │    ²   │   ³    │        │        │
//  `--------+--------+--------+--------+--------+--------+--------.  .--------+--------+--------+--------+--------+--------+--------'
//                                      |        │ ADJUST │    -   │  │    ▼   │    ▼   │    ▼   │
//                                      `--------------------------'  `--------------------------'
            bindings = <
&kp GRAVE  &kp EXCL    &kp AT     &kp HASH      &kp DLLR      &kp PRCNT      &kp CARET &kp RA(Y)      &kp AMPS   &kp RA(P)  &kp RA(LS(COMMA)) &kp DEL
&trans     &kp RA(Q)   &kp RA(S)  &kp RA(F)     &kp RA(G)     &kp MINUS      &kp BSLH  &kp RA(LS(N5)) &kp RA(N5) &none      &kp RA(M)         &none
&trans     &kp LS(F10) &kp LS(F6) &kp LA(LC(L)) &kp LC(LS(V)) &none          &kp PIPE  &none          &kp RA(N2) &kp RA(N3) &none             &trans
                                  &trans        &mo 3         &kp UNDER      &trans    &trans         &trans
            >;
        };

// Adjust
//  ,-----------------------------------------------------.                    ,-----------------------------------------------------.
//  | Reset  |        |        |        |        | Print  |                    |  MUTE  |   F7   |   F8   |   F9   |  F12   |   ▼    |
//  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
//  | BT CLR |  BT 0  |  BT 1  |  BT 2  |  BT 3  |  BT 4  |                    |  VOL↑  |   F4   |   F5   |   F6   |  F11   |   ▼    |
//  |--------+--------+--------+--------+--------+--------|                    |--------+--------+--------+--------+--------+--------|
//  |        |        |  Next  |  Play  |  Prv   |        |                    |  VOL↓  |   F1   |   F2   |   F3   |  F10   |   ▼    |
//  `--------+--------+--------+--------+--------+--------+--------.  .--------+--------+--------+--------+--------+--------+--------'
//                                      │    ▼   │    ▼   │    ▼   │  │    ▼   │    ▼   │    ▼   │ 
//                                      `--------------------------'  `--------------------------'
        layer_3 {
            bindings = <
&kp LC(LS(ESC))  &none         &none         &none         &kp PSCRN     &kp LC(LS(T))    &kp C_MUTE    &kp F7  &kp F8  &kp F9  &kp F12  &trans
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &kp C_VOL_UP  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans           &none         &kp K_NEXT    &kp K_PLAY    &kp K_PRV     &kp LS(LC(B))    &kp C_VOL_DN  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                             &trans        &trans        &trans           &trans        &trans  &trans
            >;
        };
    };
};
